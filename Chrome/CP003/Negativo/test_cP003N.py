# Generated by Selenium IDE
# Realizar una publicación excediendo los caracteres máximos - Usuario
import pytest
import time
import json
import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCP003N():
  def setup_method(self):
    self.options = webdriver.ChromeOptions()
    self.options.add_experimental_option('excludeSwitches', ['enable-logging'])
    self.driver = webdriver.Chrome(executable_path='<path-to-chrome>', options=self.options)
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_cP003N(self, email, password):
    self.driver.get("https://tucan.toolsincloud.net/index.php")
    self.driver.set_window_size(1382, 736)
    self.driver.find_element(By.NAME, "email").click()
    self.driver.find_element(By.NAME, "email").send_keys(email)
    self.driver.find_element(By.NAME, "password").click()
    self.driver.find_element(By.NAME, "password").send_keys(password)
    self.driver.find_element(By.NAME, "login").click()
    self.driver.find_element(By.NAME, "status").click()
    self.driver.find_element(By.NAME, "status").send_keys("La prueba de software es el proceso de evaluación y verificación de un producto \\no aplicación de software para saber si hace lo que se supone que debe hacer. Los beneficios \\nde las pruebas incluyen la prevención de errores, la reducción de los costos de desarrollo \\ny la mejora del rendimiento.\\n")
    self.driver.find_element(By.ID, "tweet-input").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".item2-pair").text == "status must be not more than 140"
    
  def exeCP003N(self): 
    try:
      self.test003n=TestCP003N()
      with open("registros.csv") as c:
        self.reader=csv.DictReader(c)
        for row in self.reader:
          self.test003n.setup_method()
          self.test003n.test_cP003N(email=row["email"], password=row["password"])
          self.test003n.teardown_method()
    except:
      print("Algo inesperado ha ocurrido en el CP003N")
      
exe = TestCP003N()
exe.exeCP003N()